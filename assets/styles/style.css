html {
  -moz-font-feature-settings: "liga", "kern";
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  position: relative;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  background-color: #E6E6E6;
  color: #2E2E2E;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-size: 16px;
  line-height: 1.15;
}

body {
  position: relative;
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

progress {
  vertical-align: baseline;
}

template,
[hidden] {
  display: none;
}

a {
  -webkit-text-decoration-skip: objects;
  background-color: transparent;
}

a:active, a:hover {
  outline-width: 0;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

b,
strong {
  font-weight: inherit;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67rem 0;
}

mark {
  background-color: #FFFF00;
  color: #000000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

figure {
  margin: 0;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
  overflow: visible;
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
  margin: 0;
}

optgroup {
  font-weight: bold;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  border: 1px solid #B8B8B8;
  margin: 0 0.125rem;
  padding: 0.35rem 0.625rem 0.75rem;
}

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

textarea {
  overflow: auto;
}

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  height: 0.0625rem;
  overflow: hidden;
  position: absolute;
  width: 0.0625rem;
}

.screen-reader-text:focus {
  font-size: 0.875;
  font-size: rem(0.875);
  background-color: #E6E6E6;
  -webkit-box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
          box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto;
  color: #8A8A8A;
  display: block;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 0.9375rem 1.4375rem 0.875rem;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
}

.alignleft {
  display: inline;
  float: left;
  margin: 0 1rem 0 0;
}

.alignright {
  display: inline;
  float: right;
  margin: 0 0 0 1rem;
}

.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.clear::before, .clear::after {
  content: "";
  display: table;
}

.clear::after {
  clear: both;
}

embed,
iframe,
object {
  max-width: 100%;
}

hr {
  background-color: #8A8A8A;
  border: none;
  height: px-to-px-to-rem(1);
  margin: 0 0 1rem 0;
  width: auto;
}

figure {
  margin: 0;
}

ul,
ol {
  margin: 0 0 1rem 1rem;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

li > ul,
li > ol {
  margin: 0 0 0 1rem;
}

dt {
  font-weight: 700;
}

dd {
  margin: 0 1rem 1rem 0;
}

table {
  height: auto;
  margin: 0 0 1rem 0;
  width: 100%;
}

th {
  font-weight: 700;
}

img {
  height: auto;
  max-width: 100%;
}

.fluid-embed {
  height: 0;
  overflow: hidden;
  padding-bottom: 56.25%;
  position: relative;
}

@media (max-width: 768px) {
  .fluid-embed {
    padding-bottom: calc(56.25% - 2.1875rem);
  }
}

.fluid-embed embed,
.fluid-embed object,
.fluid-embed iframe {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.image-as-background {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
}

.video-as-background {
  display: block;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center top;
     object-position: center top;
  position: absolute;
  width: 100%;
  z-index: 1;
}

body,
button,
input,
select,
textarea {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
p {
  margin: 0 0 1rem 0;
}

b,
strong {
  font-weight: 700;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

blockquote,
q {
  margin: 0 1rem;
  quotes: "" "";
}

blockquote::before, blockquote::after,
q::before,
q::after {
  content: "";
}

address {
  margin: 0 0 1rem 0;
}

pre {
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: 1rem;
  line-height: 1.725;
  margin: 0 0 1rem;
  max-width: 100%;
  overflow: auto;
  padding: 1rem;
}

code,
kbd,
tt,
var {
  font-family: Monaco, Consolas, "DejaVu Sans Mono", monospace;
  font-size: 1rem;
}

abbr,
acronym {
  border-bottom: 1px dotted #5C5C5C;
  cursor: help;
}

mark,
ins {
  text-decoration: none;
}

sup,
sub {
  font-size: 75%;
  height: 0;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  bottom: 1ex;
}

sub {
  top: 0.5ex;
}

small {
  font-size: 75%;
}

big {
  font-size: 125%;
}

.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {
  width: 100%;
}

.row::after {
  clear: both;
  content: "";
  display: table;
  margin: 0;
}

div[class^="col"] {
  float: left;
}

@supports (flex-wrap: wrap) {
  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {
    width: 100%;
  }
  .row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin: 0;
    overflow: visible;
  }
}

@media (min-width: 1025px) {
  div[class^="col"].col-11 {
    width: calc(((100% / 12) * 1.0909) - (1rem / 1.1));
    margin-right: 1rem;
  }
  div[class^="col"].col-11.no-gutter {
    width: calc((100% / 12) * 1.0909);
  }
  div[class^="col"].col-12 {
    width: calc(((100% / 12) * 1) - (1rem / 1.09));
    margin-right: 1rem;
  }
  div[class^="col"].col-12.no-gutter {
    width: calc((100% / 12) * 1);
  }
}

@media (min-width: 981px) {
  div[class^="col"].col-9 {
    width: calc(((100% / 12) * 1.333) - (1rem / 1.127));
    margin-right: 1rem;
  }
  div[class^="col"].col-9.no-gutter {
    width: calc((100% / 12) * 1.333);
  }
  div[class^="col"].col-10 {
    width: calc(((100% / 12) * 1.2) - (1rem / 1.11));
    margin-right: 1rem;
  }
  div[class^="col"].col-10.no-gutter {
    width: calc((100% / 12) * 1.2);
  }
}

@media (min-width: 769px) {
  div[class^="col"].col-7 {
    width: calc(((100% / 12) * 1.7141) - (1rem / 1.16));
    margin-right: 1rem;
  }
  div[class^="col"].col-7.no-gutter {
    width: calc((100% / 12) * 1.7141);
  }
  div[class^="col"].col-8 {
    width: calc(((100% / 12) * 1.5) - (1rem / 1.14));
    margin-right: 1rem;
  }
  div[class^="col"].col-8.no-gutter {
    width: calc((100% / 12) * 1.5);
  }
}

@media (min-width: 641px) {
  div[class^="col"].col-5 {
    width: calc(((100% / 12) * 2.4) - (1rem / 1.25));
    margin-right: 1rem;
  }
  div[class^="col"].col-5.no-gutter {
    width: calc((100% / 12) * 2.4);
  }
  div[class^="col"].col-6 {
    width: calc(((100% / 12) * 2) - (1rem / 1.2));
    margin-right: 1rem;
  }
  div[class^="col"].col-6.no-gutter {
    width: calc((100% / 12) * 2);
  }
}

@media (min-width: 426px) {
  div[class^="col"].col-4 {
    width: calc(((100% / 12) * 3) - (1rem / 1.33));
    margin-right: 1rem;
  }
  div[class^="col"].col-4.no-gutter {
    width: calc((100% / 12) * 3);
  }
}

@media (min-width: 321px) {
  div[class^="col"].col-2 {
    width: calc(((100% / 12) * 6) - (1rem / 2));
    margin-right: 1rem;
  }
  div[class^="col"].col-2.no-gutter {
    width: calc((100% / 12) * 6);
  }
  div[class^="col"].col-3 {
    width: calc(((100% / 12) * 4) - (1rem / 1.5));
    margin-right: 1rem;
  }
  div[class^="col"].col-3.no-gutter {
    width: calc((100% / 12) * 4);
  }
}

div[class^="col"].no-gutter {
  margin-left: 0;
  margin-right: 0;
}

div[class^="col"]:last-of-type {
  margin-right: 0;
}

.wp-video {
  display: block;
  float: none;
  overflow: hidden;
}

.wp-caption {
  margin: 0 0 rem(24) 0;
  max-width: 100%;
}

.wp-caption img[class*="wp-image-"] {
  display: block;
  margin: 0 auto;
}

.wp-caption.aligncenter {
  margin: 0 auto rem(24) auto;
}

.wp-caption.alignleft {
  margin-right: rem(24);
}

.wp-caption.alignright {
  margin-left: rem(24);
}

.wp-caption .wp-caption-text {
  font-style: italic;
  line-height: 1.2;
  margin: rem(6) 0 0;
  text-align: center;
}

@media only screen and (min-width: 768px) {
  .alignfull {
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
    width: auto;
    max-width: 1000%;
  }
  .alignwide {
    margin-left: calc(25% - 25vw);
    margin-right: calc(25% - 25vw);
    width: auto;
    max-width: 1000%;
  }
  .alignwide img,
  .alignfull img {
    display: block;
    margin: 0 auto;
  }
}

.wp-caption-text {
  text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
