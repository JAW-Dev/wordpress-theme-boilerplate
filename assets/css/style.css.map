{"version":3,"sources":["base/_core.scss","mixins/_font-legibility.scss","mixins/_font-smoothing.scss","variables/_colors.scss","variables/_typography.scss","base/_normalize.scss","functions/_px-to.scss","style.css","base/_accessibility.scss","mixins/_font-size.scss","base/_alignments.scss","mixins/_margin-auto.scss","mixins/_clearfix.scss","base/_elements.scss","base/_media.scss","base/_media-queries.scss","base/_typography.scss","layout/_float.scss","layout/_flexbox.scss","mixins/_columns.scss","functions/_columns.scss","variables/_layout.scss","layout/_core.scss","_wordPress.scss","views/_partials/nav-menu/_overlay.scss","views/_partials/nav-menu/_main.scss","views/_partials/nav-menu/_buttons.scss","mixins/_margin-padding-reset.scss","mixins/_list-reset.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["@charset \"UTF-8\";\n// ========================================\n// Core\n// ========================================\n\n\nhtml {\n\t@include font-legibility;\n\t@include font-smoothing;\n\t-ms-text-size-adjust: 100%;\n\t-webkit-text-size-adjust: 100%;\n\tbackground-color: $color-background-body;\n\tbox-sizing: border-box;\n\tcolor: $color-text-main;\n\tfont-family: $font-sans;\n\tfont-size: $font-size-base + px;\n\tline-height: 1.15;\n\tposition: relative;\n}\n\n*,\n*::before,\n*::after {\n\tbox-sizing: inherit;\n}\n\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Font Legibility\n// ========================================\n\n// Improve the font rendering to better match client PSDs.\n// Side effects include: slower rednering of pages.\n// Use only when necessary!\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include font-legibility;\n//     }\n//\n//   Output.\n//     .foo {\n//        text-rendering: optimizeLegibility;\n//        -moz-font-feature-settings: 'liga', 'kern';\n//        -moz-osx-font-smoothing: grayscale;\n//        -webkit-font-smoothing: antialiased;\n//     }\n\n@mixin font-legibility {\n\t-moz-font-feature-settings: \"liga\", \"kern\";\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-font-smoothing: antialiased;\n\ttext-rendering: optimizeLegibility;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Fomt Smoothing\n// ========================================\n\n// Improve the font rendering to better match client PSDs.\n// Side effects include: slower rendering of pages.\n// Use only when necessary!\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include font-smoothing;\n//     }\n//\n//   Output.\n//     .foo {\n//\t\t\t -webkit-font-smoothing: antialiased;\n//\t\t\t -moz-osx-font-smoothing: grayscale;\n//     }\n\n@mixin font-smoothing {\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-font-smoothing: antialiased;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Colors\n// ========================================\n\n$black: rgb(0, 0, 0);\n$black-overlay: rgba(0, 0, 0, 0.6);\n$white: rgb(255, 255, 255);\n$mineshaft: rgb(46, 46, 46);\n$scorpion: rgb(92, 92, 92);\n$grey: rgb(138, 138, 138);\n$silver: rgb(184, 184, 184);\n$mercury: rgb(230, 230, 230);\n$yellow: rgb(255, 255, 0);\n\n\n$color-background-screen: $mercury;\n$color-text-screen: $grey;\n$color-screen-reader-box-shadow: rgba(0, 0, 0, 0.6);\n$color-background-body: $mercury;\n$color-text-main:       $mineshaft;\n$color-background-hr:   $grey;\n$color-border-abbr:     $scorpion;\n","@charset \"UTF-8\";\n// ========================================\n// Typography\n// ========================================\n\n$font-sans:  Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n$font-serif: Georgia, Times, \"Times New Roman\", serif;\n$font-code: Monaco, Consolas, \"DejaVu Sans Mono\", monospace;\n$font-pre: \"Courier 10 Pitch\", Courier, monospace;\n\n$line-height-body: 1.725;\n$line-height-pre: $line-height-body;\n$font-size-base: 16;\n","@charset \"UTF-8\";\n// ========================================\n// Media\n// ========================================\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n\tdisplay: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n\tdisplay: inline-block;\n}\n\naudio:not([controls]) {\n\tdisplay: none;\n\theight: 0;\n}\n\nprogress {\n\tvertical-align: baseline;\n}\n\ntemplate,\n[hidden] {\n\tdisplay: none;\n}\n\na {\n\t-webkit-text-decoration-skip: objects;\n\tbackground-color: transparent;\n\n\t&:active,\n\t&:hover {\n\t\toutline-width: 0;\n\t}\n}\n\nabbr[title] {\n\tborder-bottom: none;\n\ttext-decoration: underline;\n\ttext-decoration: underline dotted; // sass-lint:disable-line no-duplicate-properties\n}\n\nb,\nstrong {\n\tfont-weight: inherit;\n}\n\ndfn {\n\tfont-style: italic;\n}\n\nh1 {\n\tfont-size: 2em;\n\tmargin: 0.67rem 0;\n}\n\nmark {\n\tbackground-color: $yellow;\n\tcolor: $black;\n}\n\nsmall {\n\tfont-size: 80%;\n}\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\nimg {\n\tborder-style: none;\n}\n\nsvg:not(:root) {\n\toverflow: hidden;\n}\n\ncode,\nkbd,\npre,\nsamp {\n\tfont-family: monospace, monospace;\n\tfont-size: 1em;\n}\n\nfigure {\n\tmargin: 0;\n}\n\nhr {\n\tbox-sizing: content-box;\n\theight: 0;\n\toverflow: visible;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont: inherit;\n\tmargin: 0;\n}\n\noptgroup {\n\tfont-weight: bold;\n}\n\nbutton,\ninput {\n\toverflow: visible;\n}\n\nbutton,\nselect {\n\ttext-transform: none;\n}\n\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n\t-webkit-appearance: button;\n}\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\nfieldset {\n\tborder: 1px solid $silver;\n\tmargin: 0 px-to-rem(2);\n\tpadding: 0.35rem 0.625rem 0.75rem;\n}\n\nlegend {\n\tbox-sizing: border-box;\n\tcolor: inherit;\n\tdisplay: table;\n\tmax-width: 100%;\n\tpadding: 0;\n\twhite-space: normal;\n}\n\ntextarea {\n\toverflow: auto;\n}\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n\tbox-sizing: border-box;\n\tpadding: 0;\n}\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n[type=\"search\"] {\n\t-webkit-appearance: textfield;\n\toutline-offset: -2px;\n}\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n::-webkit-input-placeholder {\n\tcolor: inherit;\n\topacity: 0.54;\n}\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button;\n\tfont: inherit;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Px To ~\n// ========================================\n\n// Convert px to em\n//\n// @param {int} $size The px amount to convert.\n//\n// @return string The converted px size.\n@function px-to-em($pxval, $base: $font-size-base) {\n\t@if not unitless($pxval) {\n\t\t$pxval: strip-units($pxval);\n\t}\n\t@if not unitless($base) {\n\t\t$base: strip-units($base);\n\t}\n\t@return ($pxval / $base) * 1em;\n}\n\n// Convert px to rem\n//\n// @param {int} $size The px amount to convert.\n//\n// @return string The converted px size.\n@function px-to-rem($pxval, $base: $font-size-base) {\n\t@if not unitless($pxval) {\n\t\t$pxval: strip-units($pxval);\n\t}\n\t@if not unitless($base) {\n\t\t$base: strip-units($base);\n\t}\n\t@return ($pxval / $base) * 1rem;\n}\n","html {\n  -moz-font-feature-settings: \"liga\", \"kern\";\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizeLegibility;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  background-color: #e6e6e6;\n  box-sizing: border-box;\n  color: #2e2e2e;\n  font-family: Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n  font-size: 16px;\n  line-height: 1.15;\n  position: relative;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n}\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\ntemplate,\n[hidden] {\n  display: none;\n}\n\na {\n  -webkit-text-decoration-skip: objects;\n  background-color: transparent;\n}\n\na:active, a:hover {\n  outline-width: 0;\n}\n\nabbr[title] {\n  border-bottom: none;\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\ndfn {\n  font-style: italic;\n}\n\nh1 {\n  font-size: 2em;\n  margin: 0.67rem 0;\n}\n\nmark {\n  background-color: yellow;\n  color: black;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\nimg {\n  border-style: none;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\nfigure {\n  margin: 0;\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit;\n  margin: 0;\n}\n\noptgroup {\n  font-weight: bold;\n}\n\nbutton,\ninput {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\nbutton,\nhtml [type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\nfieldset {\n  border: 1px solid #b8b8b8;\n  margin: 0 0.125rem;\n  padding: 0.35rem 0.625rem 0.75rem;\n}\n\nlegend {\n  box-sizing: border-box;\n  color: inherit;\n  display: table;\n  max-width: 100%;\n  padding: 0;\n  white-space: normal;\n}\n\ntextarea {\n  overflow: auto;\n}\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  font: inherit;\n}\n\n.screen-reader-text {\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 0.0625rem;\n  overflow: hidden;\n  position: absolute;\n  width: 0.0625rem;\n}\n\n.screen-reader-text:focus {\n  font-size: 0.875;\n  font-size: rem(0.875);\n  background-color: #e6e6e6;\n  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\n  clip: auto;\n  color: #8a8a8a;\n  display: block;\n  font-weight: bold;\n  height: auto;\n  left: 5px;\n  line-height: normal;\n  padding: 0.9375rem 1.4375rem 0.875rem;\n  text-decoration: none;\n  top: 5px;\n  width: auto;\n  z-index: 100000;\n}\n\n.alignleft {\n  display: inline;\n  float: left;\n  margin: 0 1rem 0 0;\n}\n\n.alignright {\n  display: inline;\n  float: right;\n  margin: 0 0 0 1rem;\n}\n\n.aligncenter {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.clear::before, .clear::after {\n  content: \"\";\n  display: table;\n}\n\n.clear::after {\n  clear: both;\n}\n\nembed,\niframe,\nobject {\n  max-width: 100%;\n}\n\nhr {\n  background-color: #8a8a8a;\n  border: none;\n  height: px-to-px-to-rem(1);\n  margin: 0 0 1rem 0;\n  width: auto;\n}\n\nfigure {\n  margin: 0;\n}\n\nul,\nol {\n  margin: 0 0 1rem 1rem;\n}\n\nul {\n  list-style: disc;\n}\n\nol {\n  list-style: decimal;\n}\n\nli > ul,\nli > ol {\n  margin: 0 0 0 1rem;\n}\n\ndt {\n  font-weight: 700;\n}\n\ndd {\n  margin: 0 1rem 1rem 0;\n}\n\ntable {\n  height: auto;\n  margin: 0 0 1rem 0;\n  width: 100%;\n}\n\nth {\n  font-weight: 700;\n}\n\nimg {\n  height: auto;\n  max-width: 100%;\n}\n\n.fluid-embed {\n  height: 0;\n  overflow: hidden;\n  padding-bottom: 56.25%;\n  position: relative;\n}\n\n@media (max-width: 768px) {\n  .fluid-embed {\n    padding-bottom: calc(56.25% - 2.1875rem);\n  }\n}\n\n.fluid-embed embed,\n.fluid-embed object,\n.fluid-embed iframe {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.image-as-background {\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.video-as-background {\n  display: block;\n  height: 100%;\n  object-fit: cover;\n  object-position: center top;\n  position: absolute;\n  width: 100%;\n  z-index: 1;\n}\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6,\np {\n  margin: 0 0 1rem 0;\n}\n\nb,\nstrong {\n  font-weight: 700;\n}\n\ndfn,\ncite,\nem,\ni {\n  font-style: italic;\n}\n\nblockquote,\nq {\n  margin: 0 1rem;\n  quotes: \"\" \"\";\n}\n\nblockquote::before, blockquote::after,\nq::before,\nq::after {\n  content: \"\";\n}\n\naddress {\n  margin: 0 0 1rem 0;\n}\n\npre {\n  font-family: \"Courier 10 Pitch\", Courier, monospace;\n  font-size: 1rem;\n  line-height: 1.725;\n  margin: 0 0 1rem;\n  max-width: 100%;\n  overflow: auto;\n  padding: 1rem;\n}\n\ncode,\nkbd,\ntt,\nvar {\n  font-family: Monaco, Consolas, \"DejaVu Sans Mono\", monospace;\n  font-size: 1rem;\n}\n\nabbr,\nacronym {\n  border-bottom: 1px dotted #5c5c5c;\n  cursor: help;\n}\n\nmark,\nins {\n  text-decoration: none;\n}\n\nsup,\nsub {\n  font-size: 75%;\n  height: 0;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  bottom: 1ex;\n}\n\nsub {\n  top: 0.5ex;\n}\n\nsmall {\n  font-size: 75%;\n}\n\nbig {\n  font-size: 125%;\n}\n\n.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {\n  width: 100%;\n}\n\n.row::after {\n  clear: both;\n  content: \"\";\n  display: table;\n  margin: 0;\n}\n\n.row > [class^=\"col\"] {\n  float: left;\n}\n\n@supports (flex-wrap: wrap) {\n  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12 {\n    width: 100%;\n  }\n  .row {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: 0;\n    overflow: visible;\n  }\n}\n\n@media (min-width: 1025px) {\n  .row > [class^=\"col\"].col-11 {\n    width: calc(((100% / 12) * 1.0909) - (1rem / 1.1));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-11.no-gutter {\n    width: calc((100% / 12) * 1.0909);\n  }\n  .row > [class^=\"col\"].col-12 {\n    width: calc(((100% / 12) * 1) - (1rem / 1.09));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-12.no-gutter {\n    width: calc((100% / 12) * 1);\n  }\n}\n\n@media (min-width: 981px) {\n  .row > [class^=\"col\"].col-9 {\n    width: calc(((100% / 12) * 1.333) - (1rem / 1.127));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-9.no-gutter {\n    width: calc((100% / 12) * 1.333);\n  }\n  .row > [class^=\"col\"].col-10 {\n    width: calc(((100% / 12) * 1.2) - (1rem / 1.11));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-10.no-gutter {\n    width: calc((100% / 12) * 1.2);\n  }\n}\n\n@media (min-width: 769px) {\n  .row > [class^=\"col\"].col-7 {\n    width: calc(((100% / 12) * 1.7141) - (1rem / 1.16));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-7.no-gutter {\n    width: calc((100% / 12) * 1.7141);\n  }\n  .row > [class^=\"col\"].col-8 {\n    width: calc(((100% / 12) * 1.5) - (1rem / 1.14));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-8.no-gutter {\n    width: calc((100% / 12) * 1.5);\n  }\n}\n\n@media (min-width: 641px) {\n  .row > [class^=\"col\"].col-5 {\n    width: calc(((100% / 12) * 2.4) - (1rem / 1.25));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-5.no-gutter {\n    width: calc((100% / 12) * 2.4);\n  }\n  .row > [class^=\"col\"].col-6 {\n    width: calc(((100% / 12) * 2) - (1rem / 1.2));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-6.no-gutter {\n    width: calc((100% / 12) * 2);\n  }\n}\n\n@media (min-width: 426px) {\n  .row > [class^=\"col\"].col-4 {\n    width: calc(((100% / 12) * 3) - (1rem / 1.33));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-4.no-gutter {\n    width: calc((100% / 12) * 3);\n  }\n}\n\n@media (min-width: 321px) {\n  .row > [class^=\"col\"].col-2 {\n    width: calc(((100% / 12) * 6) - (1rem / 2));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-2.no-gutter {\n    width: calc((100% / 12) * 6);\n  }\n  .row > [class^=\"col\"].col-3 {\n    width: calc(((100% / 12) * 4) - (1rem / 1.5));\n    margin-right: 1rem;\n  }\n  .row > [class^=\"col\"].col-3.no-gutter {\n    width: calc((100% / 12) * 4);\n  }\n}\n\n.row > [class^=\"col\"].no-gutter {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.row > [class^=\"col\"]:last-child {\n  margin-right: 0;\n}\n\n.wp-video {\n  display: block;\n  float: none;\n  overflow: hidden;\n}\n\n.wp-caption {\n  margin: 0 0 rem(24) 0;\n  max-width: 100%;\n}\n\n.wp-caption img[class*=\"wp-image-\"] {\n  display: block;\n  margin: 0 auto;\n}\n\n.wp-caption.aligncenter {\n  margin: 0 auto rem(24) auto;\n}\n\n.wp-caption.alignleft {\n  margin-right: rem(24);\n}\n\n.wp-caption.alignright {\n  margin-left: rem(24);\n}\n\n.wp-caption .wp-caption-text {\n  font-style: italic;\n  line-height: 1.2;\n  margin: rem(6) 0 0;\n  text-align: center;\n}\n\n@media only screen and (min-width: 768px) {\n  .alignfull {\n    margin-left: calc(50% - 50vw);\n    margin-right: calc(50% - 50vw);\n    width: auto;\n    max-width: 1000%;\n  }\n  .alignwide {\n    margin-left: calc(25% - 25vw);\n    margin-right: calc(25% - 25vw);\n    width: auto;\n    max-width: 1000%;\n  }\n  .alignwide img,\n  .alignfull img {\n    display: block;\n    margin: 0 auto;\n  }\n}\n\n.wp-caption-text {\n  text-align: center;\n}\n\n.site-header__overlay {\n  display: none;\n  transition: opacity 0.3s ease 0.3s, left 0s ease 0.3s;\n}\n\n@media (max-width: 979px) {\n  .site-header__overlay {\n    background-color: rgba(0, 0, 0, 0.6);\n    display: block;\n    height: 100%;\n    left: -999em;\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 9;\n  }\n}\n\n@media (max-width: 979px) {\n  .menu-open .site-header__overlay {\n    left: 0;\n    opacity: 1;\n    transition: opacity 0.3s ease 0s, left 0s ease 0s;\n  }\n}\n\n.site-header__nav {\n  height: auto;\n  width: auto;\n}\n\n.site-header__nav .mobile-button, .site-header__nav .nav__open, .site-header__nav .nav__close {\n  background-color: transparent;\n  border: none;\n  float: right;\n  height: 0;\n  padding: 0;\n}\n\n.site-header__nav .mobile-button-icon {\n  display: block;\n  height: 1.5625rem;\n  width: 1.5625rem;\n}\n\n@media (min-width: 981px) {\n  .site-header__nav .mobile-button-icon {\n    display: none;\n  }\n}\n\n.site-header__nav .mobile-icon, .site-header__nav .nav__open-icon, .site-header__nav .nav__close-icon {\n  display: block;\n  height: 1.5625rem;\n  width: 1.5625rem;\n}\n\n@media (min-width: 981px) {\n  .site-header__nav .mobile-icon, .site-header__nav .nav__open-icon, .site-header__nav .nav__close-icon {\n    display: none;\n  }\n}\n\n.site-header__nav .nav__open {\n  display: block;\n}\n\n.site-header__nav .nav__close {\n  display: none;\n  position: absolute;\n  right: 0.5rem;\n  top: 0.5rem;\n}\n\n@media (max-width: 979px) {\n  .site-header__nav.menu-open .nav__open {\n    display: none;\n  }\n  .site-header__nav.menu-open .nav__close {\n    display: block;\n  }\n}\n\n.menu {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  height: auto;\n  position: relative;\n  z-index: 10;\n}\n\n.menu::before, .menu::after {\n  content: \"\";\n  display: table;\n}\n\n.menu::after {\n  clear: both;\n}\n\n@media (max-width: 979px) {\n  .menu {\n    background-color: #e6e6e6;\n    border: 1px solid;\n    display: block;\n    float: none;\n    height: 100%;\n    left: -62.4375rem;\n    padding: 1rem 2rem 1rem 1rem;\n    position: absolute;\n    top: 0;\n    transition: left 0.5s ease;\n    width: 16rem;\n  }\n  .menu li.clicked > ul {\n    height: auto;\n    left: auto;\n  }\n}\n\n.menu > li {\n  flex-grow: 1;\n}\n\n.menu ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  float: left;\n  left: -999em;\n  position: absolute;\n  top: 100%;\n  z-index: 99999;\n}\n\n.menu ul::before, .menu ul::after {\n  content: \"\";\n  display: table;\n}\n\n.menu ul::after {\n  clear: both;\n}\n\n@media (max-width: 979px) {\n  .menu ul {\n    float: none;\n    height: 0;\n    position: relative;\n  }\n}\n\n.menu ul ul {\n  left: -999em;\n  top: 0;\n}\n\n@media (max-width: 979px) {\n  .menu ul ul {\n    height: 0;\n  }\n}\n\n@media (min-width: 981px) {\n  .menu ul li:hover {\n    position: relative;\n  }\n  .menu ul li:hover > ul {\n    left: 100%;\n  }\n}\n\n.menu ul a {\n  width: 9.375rem;\n}\n\n.menu li:hover > ul {\n  left: auto;\n}\n\n@media (max-width: 979px) {\n  .menu li.clicked > ul {\n    height: auto;\n    left: auto;\n  }\n}\n\n.menu a {\n  display: block;\n}\n\n@media (max-width: 979px) {\n  .menu-open .menu {\n    left: 0;\n    transition: left 0.3s ease 0.2s;\n  }\n}\n","@charset \"UTF-8\";\n// ========================================\n// Accessibility\n// ========================================\n\n.screen-reader-text {\n\tclip: rect(1px, 1px, 1px, 1px);\n\theight: px-to-rem(1);\n\toverflow: hidden;\n\tposition: absolute;\n\twidth: px-to-rem(1);\n\n\t&:focus {\n\t\t@include font-size(0.875);\n\n\t\tbackground-color: $color-background-screen;\n\t\tbox-shadow: 0 0 2px 2px $color-screen-reader-box-shadow;\n\t\tclip: auto;\n\t\tcolor: $color-text-screen;\n\t\tdisplay: block;\n\t\tfont-weight: bold;\n\t\theight: auto;\n\t\tleft: 5px;\n\t\tline-height: normal;\n\t\tpadding: px-to-rem(15) px-to-rem(23) px-to-rem(14);\n\t\ttext-decoration: none;\n\t\ttop: 5px;\n\t\twidth: auto;\n\t\tz-index: 100000;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Font Legibility\n// ========================================\n\n// Formats font size to rem with a px fallback\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include font-size(16);\n//     }\n//\n//   Output.\n//     .foo {\n//        font-size: 16px;\n//        font-size: 1rem;\n//     }\n\n@mixin font-size($size-value: 1px) {\n\tfont-size: $size-value;\n\tfont-size: rem($size-value); // sass-lint:disable-line no-duplicate-properties\n}\n","@charset \"UTF-8\";\n// ========================================\n// Alignments\n// ========================================\n\n// Left Align\n.alignleft {\n\tdisplay: inline;\n\tfloat: left;\n\tmargin: 0 px-to-rem($font-size-base) 0 0;\n}\n\n// Right Align\n.alignright {\n\tdisplay: inline;\n\tfloat: right;\n\tmargin: 0 0 0 px-to-rem($font-size-base);\n}\n\n// Center Align\n.aligncenter {\n\t@include margin-auto;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Margin auto\n// ========================================\n\n/// Horizontally center a block element\n///\n/// @example scss - Basic Usage Sass\n///    .center-my-block-thingie {\n///        @include margin-auto();\n///    }\n///\n/// @example scss - Basic Usage CSS Output\n///    .center-my-block-thingie {\n///        display: block;\n///        margin-left: auto;\n///        margin-right: auto;\n///    }\n\n@mixin margin-auto {\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Clearfix\n// ========================================\n\n// Add a cleafix to elemets\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include clearfix;\n//     }\n//\n//   Output.\n//     .foo::before, .foo::after {\n//        content: \"\";\n//        display: table;\n//     }\n//     .foo::after {\n//        clear: both;\n//     }\n\n\n@mixin clearfix {\n\t&::before,\n\t&::after {\n\t\tcontent: \"\";\n\t\tdisplay: table;\n\t}\n\n\t&::after {\n\t\tclear: both;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// HTML Elements\n// ========================================\n\n// Iframes\nembed,\niframe,\nobject {\n\tmax-width: 100%;\n}\n\nhr {\n\tbackground-color: $color-background-hr;\n\tborder: none;\n\theight: px-to-px-to-rem(1);\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n\twidth: auto;\n}\n\nfigure {\n\tmargin: 0;\n}\n\n// Lists\nul,\nol {\n\tmargin: 0 0 px-to-rem($font-size-base) px-to-rem($font-size-base);\n}\n\nul {\n\tlist-style: disc;\n}\n\nol {\n\tlist-style: decimal;\n}\n\nli > ul,\nli > ol {\n\tmargin: 0 0 0 px-to-rem($font-size-base);\n}\n\ndt {\n\tfont-weight: 700;\n}\n\ndd {\n\tmargin: 0 px-to-rem($font-size-base) px-to-rem($font-size-base) 0;\n}\n\n// Tables\ntable {\n\theight: auto;\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n\twidth: 100%;\n}\n\nth {\n\tfont-weight: 700;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Media\n// ========================================\n\n// Images\nimg {\n\theight: auto;\n\tmax-width: 100%;\n}\n\n// Fluid embed\n.fluid-embed {\n\t@include media(\"<=tablet\") {\n\t\tpadding-bottom: calc(56.25% - 2.1875rem); // For ratio 16:9. 75% if ratio is 4:3 rem(35);\n\t}\n\n\theight: 0;\n\toverflow: hidden;\n\tpadding-bottom: 56.25%; // For ratio 16:9. 75% if ratio is 4:3 rem(35);\n\tposition: relative;\n\n\tembed,\n\tobject,\n\tiframe {\n\t\theight: 100%;\n\t\tleft: 0;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\twidth: 100%;\n\t}\n}\n\n// Center image background\n.image-as-background {\n\tbackground-position: center center;\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n}\n\n// Video as background\n.video-as-background {\n\tdisplay: block;\n\theight: 100%;\n\tobject-fit: cover;\n\tobject-position: center top;\n\tposition: absolute;\n\twidth: 100%;\n\tz-index: 1;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Media Queries http://include-media.com\n// ========================================\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n\t\"phone\": 320px,\n\t\"tablet\": 768px,\n\t\"desktop\": 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n\t\"screen\": \"screen\",\n\t\"print\": \"print\",\n\t\"handheld\": \"handheld\",\n\t\"landscape\": \"(orientation: landscape)\",\n\t\"portrait\": \"(orientation: portrait)\",\n\t\"retina2x\": \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\n\t\"retina3x\": \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\"\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n\t\"px\": 1,\n\t\"em\": 0.01,\n\t\"rem\": 0.1,\n\t\"\": 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: \"desktop\" !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts \n///                 the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the \n///                 static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n\t@if feature-exists(\"at-error\") {\n\t\t@error $message;\n\t} @else {\n\t\t@warn $message; // sass-lint:disable-line no-warn\n\t\t$_: noop();\n\t}\n\n\t@return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n\t@if im-log($message) {} // sass-lint:disable-line no-empty-rulesets\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {} // sass-lint:disable-line no-empty-rulesets\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n\t$no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n\t@if not $no-media-breakpoint-value {\n\t\t@if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {} // sass-lint:disable-line no-empty-rulesets\n\t}\n\n\t@each $condition in $conditions {\n\t\t@if not map-has-key($media-expressions, $condition) {\n\t\t\t$operator: get-expression-operator($condition);\n\t\t\t$prefix: get-expression-prefix($operator);\n\t\t\t$value: get-expression-value($condition, $operator);\n\n\t\t\t@if ($prefix == \"max\" and $value <= $no-media-breakpoint-value)or ($prefix == \"min\" and $value > $no-media-breakpoint-value) { // sass-lint:disable-line max-line-length\n\t\t\t\t@return false;\n\t\t\t}\n\t\t} @else if not index($im-no-media-expressions, $condition) {\n\t\t\t@return false;\n\t\t}\n\t}\n\n\t@return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n\t@each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\n\t\t@if str-index($expression, $operator) {\n\t\t\t@return $operator;\n\t\t}\n\t}\n\n\t// It is not possible to include a mixin inside a function, so we have to\n\t// rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n\t// functions cannot be called anywhere in Sass, we need to hack the call in\n\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n\t// Sass 3.3, change this line in `@if im-log(..) {}` instead.\n\t$_: im-log(\"No operator found in `#{$expression}`.\");\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n\t$operator-index: str-index($expression, $operator);\n\t$parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n\t$dimension: \"width\";\n\n\t@if str-length($parsed-dimension) > 0 {\n\t\t$dimension: $parsed-dimension;\n\t}\n\n\t@return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n\t@return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n\t$operator-index: str-index($expression, $operator);\n\t$value: str-slice($expression, $operator-index + str-length($operator));\n\n\t@if map-has-key($breakpoints, $value) {\n\t\t$value: map-get($breakpoints, $value);\n\t} @else {\n\t\t$value: to-number($value);\n\t}\n\n\t$interval: map-get($unit-intervals, unit($value));\n\n\t@if not $interval {\n\t\t// It is not possible to include a mixin inside a function, so we have to\n\t\t// rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n\t\t// functions cannot be called anywhere in Sass, we need to hack the call in\n\t\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n\t\t// Sass 3.3, change this line in `@if im-log(..) {}` instead.\n\t\t$_: im-log(\"Unknown unit `#{unit($value)}`.\");\n\t}\n\n\t@if $operator == \">\" {\n\t\t$value: $value + $interval;\n\t} @else if $operator == \"<\" {\n\t\t$value: $value - $interval;\n\t}\n\n\t@return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n\t// If it is part of $media-expressions, it has no operator\n\t// then there is no need to go any further, just return the value\n\t@if map-has-key($media-expressions, $expression) {\n\t\t@return map-get($media-expressions, $expression);\n\t}\n\n\t$operator: get-expression-operator($expression);\n\t$dimension: get-expression-dimension($expression, $operator);\n\t$prefix: get-expression-prefix($operator);\n\t$value: get-expression-value($expression, $operator);\n\n\t@return \"(#{$prefix}-#{$dimension}: #{$value})\";\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n\t@if length($list) < 1 or $start > $end {\n\t\t@return ();\n\t}\n\n\t$result: ();\n\n\t@for $i from $start through $end {\n\t\t$result: append($result, nth($list, $i));\n\t}\n\n\t@return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n\t@if type-of($value) == \"number\" {\n\t\t@return $value;\n\t} @else if type-of($value) != \"string\" {\n\t\t$_: im-log(\"Value for `to-number` should be a number or a string.\");\n\t}\n\n\t$first-character: str-slice($value, 1, 1);\n\t$result: 0;\n\t$digits: 0;\n\t$minus: ($first-character == \"-\");\n\t$numbers: (\"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8, \"9\": 9);\n\n\t// Remove +/- sign if present at first character\n\t@if ($first-character == \"+\" or $first-character == \"-\") {\n\t\t$value: str-slice($value, 2);\n\t}\n\n\t@for $i from 1 through str-length($value) {\n\t\t$character: str-slice($value, $i, $i);\n\n\t\t@if not (index(map-keys($numbers), $character) or $character == \".\") {\n\t\t\t@return to-length(if($minus, -$result, $result), str-slice($value, $i));\n\t\t}\n\n\t\t@if $character == \".\" {\n\t\t\t$digits: 1;\n\t\t} @else if $digits == 0 {\n\t\t\t$result: $result * 10 + map-get($numbers, $character);\n\t\t} @else {\n\t\t\t$digits: $digits * 10;\n\t\t\t$result: $result + map-get($numbers, $character) / $digits;\n\t\t}\n\t}\n\n\t@return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n\t$units: (\"px\": 1px, \"cm\": 1cm, \"mm\": 1mm, \"%\": 1%, \"ch\": 1ch, \"pc\": 1pc, \"in\": 1in, \"em\": 1em, \"rem\": 1rem, \"pt\": 1pt, \"ex\": 1ex, \"vw\": 1vw, \"vh\": 1vh, \"vmin\": 1vmin, \"vmax\": 1vmax); // sass-lint:disable-line max-line-length\n\n\t@if not index(map-keys($units), $unit) {\n\t\t$_: im-log(\"Invalid unit `#{$unit}`.\");\n\t}\n\n\t@return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n\t// Save global configuration\n\t$global-breakpoints: $breakpoints;\n\t$global-media-expressions: $media-expressions;\n\n\t// Update global configuration\n\t$breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n\t$media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n\t@content;\n\n\t// Restore global configuration\n\t$breakpoints: $global-breakpoints !global;\n\t$media-expressions: $global-media-expressions !global;\n}\n\n///\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n\t@if ($im-media-support and length($conditions) == 0) or (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) { // sass-lint:disable-line max-line-length\n\t\t@content;\n\t} @else if ($im-media-support and length($conditions) > 0) {\n\t\t@media #{unquote(parse-expression(nth($conditions, 1)))} {\n\t\t\t// Recursive call\n\t\t\t@include media(slice($conditions, 2)...) {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Typography\n// ========================================\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n\t@include font-smoothing;\n}\n\n// Headers and Paragraphs\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3,\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6,\np {\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n}\n\nb,\nstrong {\n\tfont-weight: 700;\n}\n\ndfn,\ncite,\nem,\ni {\n\tfont-style: italic;\n}\n\nblockquote,\nq {\n\tmargin: 0 px-to-rem($font-size-base);\n\tquotes: \"\" \"\";\n\n\t&::before,\n\t&::after {\n\t\tcontent: \"\";\n\t}\n}\n\naddress {\n\tmargin: 0 0 px-to-rem($font-size-base) 0;\n}\n\npre {\n\tfont-family: $font-pre;\n\tfont-size: px-to-rem($font-size-base);\n\tline-height: $line-height-pre;\n\tmargin: 0 0 px-to-rem($font-size-base);\n\tmax-width: 100%;\n\toverflow: auto;\n\tpadding: px-to-rem($font-size-base);\n}\n\ncode,\nkbd,\ntt,\nvar {\n\tfont-family: $font-code;\n\tfont-size: px-to-rem($font-size-base);\n}\n\nabbr,\nacronym {\n\tborder-bottom: 1px dotted $color-border-abbr;\n\tcursor: help;\n}\n\nmark,\nins {\n\ttext-decoration: none;\n}\n\nsup,\nsub {\n\tfont-size: 75%;\n\theight: 0;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsup {\n\tbottom: 1ex;\n}\n\nsub {\n\ttop: 0.5ex;\n}\n\nsmall {\n\tfont-size: 75%;\n}\n\nbig {\n\tfont-size: 125%;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Basic\n// ========================================\n\n%float-width {\n\twidth: 100%;\n}\n\n.row::after {\n\tclear: both;\n\tcontent: \"\";\n\tdisplay: table;\n\tmargin: 0;\n}\n\n.row > [class^=\"col\"] {\n\tfloat: left;\n}\n\n@for $i from 1 through 12 {\n\t.col-#{$i} {\n\t\t@extend %float-width;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Flexbox\n// ========================================\n\n@supports (flex-wrap: wrap) {\n\t%flex-width {\n\t\twidth: 100%;\n\t}\n\n\t.row {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t\tmargin: 0;\n\t\toverflow: visible;\n\t}\n\n\t@for $i from 1 through 12 {\n\t\t.col-#{$i} {\n\t\t\t@extend %flex-width;\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Columns\n// ========================================\n\n// Grid Columns\n//\n// @example\n//   Basic Usage Sass.\n//     .foo {\n//       @include columns($column-number);\n//     }\n\n@mixin col($columns) {\n\t$width: get-col-width($columns);\n\twidth: get-columns($columns);\n\n\t&.no-gutter {\n\t\twidth: calc((100% / 12) * #{$width});\n\t}\n}\n\n@mixin columns($columns) {\n\t.row > [class^=\"col\"] {\n\t\t&.col-#{$columns} {\n\t\t\t@include col(#{$columns});\n\t\t\tmargin-right: $gutter;\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Columns\n// ========================================\n\n@function get-col-width($columns) {\n\t$width: false;\n\t@if $columns == \"1\" {\n\t\t$width: 12;\n\t} @else if $columns == \"2\" {\n\t\t$width: 6;\n\t} @else if $columns == \"3\" {\n\t\t$width: 4;\n\t} @else if $columns == \"4\" {\n\t\t$width: 3;\n\t} @else if $columns == \"5\" {\n\t\t$width: 2.4;\n\t} @else if $columns == \"6\" {\n\t\t$width: 2;\n\t} @else if $columns == \"7\" {\n\t\t$width: 1.7141;\n\t} @else if $columns == \"8\" {\n\t\t$width: 1.5;\n\t} @else if $columns == \"9\" {\n\t\t$width: 1.333;\n\t} @else if $columns == \"10\" {\n\t\t$width: 1.2;\n\t} @else if $columns == \"11\" {\n\t\t$width: 1.0909;\n\t} @else if $columns == \"12\" {\n\t\t$width: 1;\n\t}\n\n\t@return $width;\n}\n\n@function get-col-space($columns) {\n\t$space: false;\n\t@if $columns == \"1\" {\n\t\t$space: 0;\n\t} @else if $columns == \"2\" {\n\t\t$space: 2;\n\t} @else if $columns == \"3\" {\n\t\t$space: 1.5;\n\t} @else if $columns == \"4\" {\n\t\t$space: 1.33;\n\t} @else if $columns == \"5\" {\n\t\t$space: 1.25;\n\t} @else if $columns == \"6\" {\n\t\t$space: 1.2;\n\t} @else if $columns == \"7\" {\n\t\t$space: 1.16;\n\t} @else if $columns == \"8\" {\n\t\t$space: 1.14;\n\t} @else if $columns == \"9\" {\n\t\t$space: 1.127;\n\t} @else if $columns == \"10\" {\n\t\t$space: 1.11;\n\t} @else if $columns == \"11\" {\n\t\t$space: 1.1;\n\t} @else if $columns == \"12\" {\n\t\t$space: 1.09;\n\t}\n\n\t@return $space;\n}\n\n@function get-columns($columns) {\n\t$width: get-col-width($columns);\n\t$space: get-col-space($columns);\n\t$calc: false;\n\n\t@if $columns == \"1\" {\n\t\t$calc: calc((100% / 12) * #{$width});\n\t} @else {\n\t\t$calc: calc(((100% / 12) * #{$width}) - (#{$gutter} / #{$space}));\n\t}\n\n\t@return $calc;\n}\n\n@function get-grid-columns($columns) {\n\t$width: get-col-width($columns);\n\t$space: get-col-space($columns);\n\n\t$calc: calc((100% / 12) * #{$width});\n\n\t@return $calc;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Layout\n// ========================================\n\n// Gutter.\n$gutter: 1rem;\n\n// Breakpoints.\n$breakpoints: (\n\tmobile: 320px,\n\tmobile-lg: 425px,\n\ttablet-sm: 640px,\n\ttablet: 768px,\n\ttablet-lg: 980px,\n\tdesktop-sm: 1024px,\n\tdesktop: 1200px\n);\n","@charset \"UTF-8\";\n// ========================================\n// Column Media Queries\n// ========================================\n\n.row > [class^=\"col\"] {\n\t&.no-gutter {\n\t\tmargin-left: 0;\n\t\tmargin-right: 0;\n\t}\n\n\t&:last-child {\n\t\tmargin-right: 0;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// WordPress\n// ========================================\n\n// Target Embed Video on page\n.wp-video {\n\tdisplay: block;\n\tfloat: none;\n\toverflow: hidden;\n}\n\n// Image captions\n.wp-caption {\n\tmargin: 0 0 rem(24) 0;\n\tmax-width: 100%;\n\n\timg[class*=\"wp-image-\"] {\n\t\tdisplay: block;\n\t\tmargin: 0 auto;\n\t}\n\n\t&.aligncenter {\n\t\tmargin: 0 auto rem(24) auto;\n\t}\n\n\t&.alignleft {\n\t\tmargin-right: rem(24);\n\t}\n\n\t&.alignright {\n\t\tmargin-left: rem(24);\n\t}\n\n\t.wp-caption-text {\n\t\tfont-style: italic;\n\t\tline-height: 1.2;\n\t\tmargin: rem(6) 0 0;\n\t\ttext-align: center;\n\t}\n}\n\n// Full image width\n@media only screen and (min-width: 768px) {\n\n\t.alignfull {\n\t\tmargin-left: calc(50% - 50vw);\n\t\tmargin-right: calc(50% - 50vw);\n\t\twidth: auto; // sass-lint:disable-line property-sort-order\n\t\tmax-width: 1000%; // sass-lint:disable-line property-sort-order\n\t}\n\n\t.alignwide {\n\t\tmargin-left: calc(25% - 25vw);\n\t\tmargin-right: calc(25% - 25vw);\n\t\twidth: auto; // sass-lint:disable-line property-sort-order\n\t\tmax-width: 1000%; // sass-lint:disable-line property-sort-order\n\t}\n\n\t.alignwide img,\n\t.alignfull img {\n\t\tdisplay: block;\n\t\tmargin: 0 auto;\n\t}\n}\n\n// Image caption text\n.wp-caption-text {\n\ttext-align: center;\n}\n","@charset \"UTF-8\";\n// ========================================\n// Navigation Overlay\n// ========================================\n\n.site-header__overlay {\n\t@include media(\"<tablet-lg\") {\n\t\tbackground-color: $black-overlay;\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\tleft: -999em;\n\t\topacity: 0;\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\tz-index: 9;\n\t}\n\tdisplay: none;\n\ttransition: opacity 0.3s ease 0.3s, left 0s ease 0.3s;\n}\n\n.menu-open .site-header__overlay {\n\t@include media(\"<tablet-lg\") {\n\t\tleft: 0;\n\t\topacity: 1;\n\t\ttransition: opacity 0.3s ease 0s, left 0s ease 0s;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Navigation\n// ========================================\n\n@import \"overlay\";\n\n.site-header__nav {\n\t@import \"buttons\";\n\theight: auto;\n\twidth: auto;\n\n\t&.menu-open {\n\t\t@include media(\"<tablet-lg\") {\n\t\t\t.nav__open {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.nav__close {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.menu {\n\t@include list-reset;\n\t@include media(\"<tablet-lg\") {\n\t\tbackground-color: $color-background-body;\n\t\tborder: 1px solid;\n\t\tdisplay: block;\n\t\tfloat: none;\n\t\theight: 100%;\n\t\tleft: px-to-rem(-999);\n\t\tpadding: 1rem 2rem 1rem 1rem;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\ttransition: left 0.5s ease;\n\t\twidth: px-to-rem(256);\n\n\t\tli {\n\t\t\t&.clicked > ul {\n\t\t\t\theight: auto;\n\t\t\t\tleft: auto;\n\t\t\t}\n\t\t}\n\t}\n\n\tdisplay: flex;\n\theight: auto;\n\tposition: relative;\n\tz-index: 10;\n\n\t&> li {\n\t\tflex-grow: 1;\n\t}\n\n\tul {\n\t\t@include list-reset;\n\t\t@include media(\"<tablet-lg\") {\n\t\t\tfloat: none;\n\t\t\theight: 0;\n\t\t\tposition: relative;\n\t\t}\n\t\tfloat: left;\n\t\tleft: -999em;\n\t\tposition: absolute;\n\t\ttop: 100%;\n\t\tz-index: 99999;\n\n\t\tul {\n\t\t\t@include media(\"<tablet-lg\") {\n\t\t\t\theight: 0;\n\t\t\t}\n\t\t\tleft: -999em;\n\t\t\ttop: 0;\n\t\t}\n\n\t\tli {\n\t\t\t@include media(\">tablet-lg\") {\n\t\t\t\t&:hover {\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\n\t\t\t\t&:hover > ul {\n\t\t\t\t\tleft: 100%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ta {\n\t\t\twidth: px-to-rem(150);\n\t\t}\n\t}\n\n\tli:hover > ul {\n\t\tleft: auto;\n\t}\n\n\n\tli {\n\t\t@include media(\"<tablet-lg\") {\n\t\t\t&.clicked > ul {\n\t\t\t\theight: auto;\n\t\t\t\tleft: auto;\n\t\t\t}\n\t\t}\n\t}\n\n\ta {\n\t\tdisplay: block;\n\t}\n}\n\n.menu-open .menu {\n\t@include media(\"<tablet-lg\") {\n\t\tleft: 0;\n\t\ttransition: left 0.3s ease 0.2s;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Navigation Buttons\n// ========================================\n\n.mobile-button {\n\tbackground-color: transparent;\n\tborder: none;\n\tfloat: right;\n\theight: 0;\n\tpadding: 0;\n\n\t&-icon {\n\t\t@include media(\">tablet-lg\") {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\tdisplay: block;\n\t\theight: px-to-rem(25);\n\t\twidth: px-to-rem(25);\n\t}\n}\n\n.mobile-icon {\n\t@include media(\">tablet-lg\") {\n\t\tdisplay: none;\n\t}\n\n\tdisplay: block;\n\theight: px-to-rem(25);\n\twidth: px-to-rem(25);\n}\n\n.nav__open {\n\t@extend .mobile-button;\n\tdisplay: block;\n\n\t&-icon {\n\t\t@extend .mobile-icon;\n\t}\n}\n\n.nav__close {\n\t@extend .mobile-button;\n\tdisplay: none;\n\tposition: absolute;\n\tright: px-to-rem(8);\n\ttop: px-to-rem(8);\n\n\t&-icon {\n\t\t@extend .mobile-icon;\n\t}\n}\n","@charset \"UTF-8\";\n// ========================================\n// Margin & Padding Reset\n// ========================================\n\n// Resets margin and padding on any element\n//\n// @example scss - Basic Usage Sass\n//    .foo {\n//\t\t\t@include margin-padding-reset;\n//    }\n//\n// @example scss - Basic Usage CSS Output\n//    .foo {\n//         margin: 0;\n//         padding: 0;\n//    }\n@mixin margin-padding-reset {\n\tmargin: 0;\n\tpadding: 0;\n}\n","@charset \"UTF-8\";\n// ========================================\n// List Reset\n// ========================================\n\n// Reset all padding and styles on both unordered and ordered lists.\n//\n// @example scss - Basic Usage Sass\n//    .foo-list {\n//        @include list-reset;\n//    }\n//\n// @example scss - Basic Usage CSS Output\n//    .foo-list {\n//         clear: both;\n//\t\t\tcontent: \"\";\n//\t\t\tdisplay: table;\n//        \tmargin: 0;\n//        \tpadding: 0;\n//        \tlist-style: none;\n//\n//    }\n\n@mixin list-reset {\n\t@include clearfix;\n\t@include margin-padding-reset;\n\n\tlist-style: none;\n}\n"]}